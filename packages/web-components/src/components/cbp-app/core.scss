/* Additional high level and utilities variables not represented by design tokens */
:root {
  // Using clamp is a more modern way of implementing this, but gives a variable size between the min and max points.
  // 20px < 600px ; 32px > 600px ; 44px > 1400px
  //--cbp-responsive-spacing-outer: clamp( var(--cbp-space-5x), 0.179rem + 2.857vw, var(--cbp-space-11x));
  --cbp-responsive-spacing-outer: var(--cbp-space-5x);
  --cbp-responsive-spacing-inner: var(--cbp-responsive-spacing-outer); // temporary - for discussion
}
@media (min-width: $cbp-breakpoint-md) {
  :root {
    --cbp-responsive-spacing-outer: var(--cbp-space-8x);
  }
}
@media (min-width: $cbp-breakpoint-xl) {
  :root {
    --cbp-responsive-spacing-outer: var(--cbp-space-11x);
  }
}

html {
  font-size: 100%;
}

body {
  color: var(--cbp-color-text-darkest);
  background-color: var(--cbp-color-branding-cbp-light);
  font: var(--cbp-font-size-body) / 1rem var(--cbp-font-family-roboto);
}

[data-cbp-theme='dark'] body {
  color: var(--cbp-color-text-lightest);
  background-color: var(--cbp-color-branding-cbp-dark);
}

p,
blockquote,
ul:not(ul ul):not(ul ol),
ol:not(ol ol):not(ol ul) {
  margin-bottom: var(--cbp-space-4x);
}

// TODO: Should this include blockquote and list items?
p {
  line-height: 1.25rem;
}

a[href],
button {
  cursor: pointer;
}

[aria-disabled='true'],
:disabled,
input:read-only:not([type='checkbox'], [type='radio'], [type='file'], [type='range'], [type='color']),
textarea:read-only {
  cursor: not-allowed;
}

/* Ensure that `hidden` is not overridden by other selectors setting display, such as flex or grid */
[hidden] {
  display: none !important;
}
